<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.t_train.member.mapper.MemberMapper">

<!-- 1-1. 리스트 -->
	<select id="list" resultType="com.t_train.member.vo.MemberVO">
		select rnum, id, name, birth, gender, tel, email, status, gradeNo, gradeName
		from(
			select rownum rnum, id, name, birth, gender, tel, email, status, gradeNo, gradeName
			from(
				select m.id, m.name, m.birth, m.gender, m.tel, m.email, m.status, m.gradeNo, g.gradeName
				from member m, grade g
				where 1 = 1
				<include refid="serach"/>
				and m.gradeNo = g.gradeNo
				order by m.id
			)
		)
		where rnum between #{startRow} and #{endRow}
	</select>
	<!-- 1-2. 전체 데이터 개수 -->
	<select id="getTotalRow" resultType="long">
		select count(*) from member
		where 1 = 1
		<include refid="serach"/>
	</select>
	
	<!-- 검색 조건 처리를 위한 태그 - 부분 태그 : sql :: 동적 쿼리 작성 -->
	<sql id="serach">
		<if test="word != null and word != ''.toString()">
			and(
			<if test="key == 'i'.toString()">
				id like '%' || #{word} || '%'
			</if>
			<if test="key == 'n'.toString()">
				name like '%' || #{word} || '%'
			</if>
			<if test="key == 'in'.toString()">
				id like '%' || #{word} || '%'
				or name like '%' || #{word} || '%'
			</if>
			)
		</if>
	</sql>
	
	<!--  2-1. 보기 -->
	<select id="view" resultType="com.t_train.member.vo.MemberVO">
		select m.id, m.name, m.birth, m.gender, m.tel, m.email, m.status,
		 m.gradeNo, g.gradeName, m.regDate
		from member m, grade g
		where (m.id = #{id})
		and (m.gradeNo = g.gradeNo)
	</select>
	
	<!-- 3. 회원가입 -->
	<insert id="write">
		insert into member(id, pw, name, gender, birth, tel, email)
		values(#{id}, #{pw}, #{name}, #{gender}, #{birth}, #{tel}, #{email})
	</insert>
	
	<!--  4. 수정 -->
	<update id="update">
		update member
		set name = #{name}, gender = #{gender}, birth = #{birth}, tel = #{tel}, email = #{email}
		where id = #{id}
	</update>
	<!-- 5. 탈퇴 -->
	<delete id="delete">
		delete from member
		where id = #{id} and pw = #{pw}
	</delete>
	
	<!-- 6-1. 로그인 처리 -->
	<select id="login" resultType="com.t_train.member.vo.LoginVO">
		select m.id, m.name, m.gradeNo, g.gradeName
		from member m, grade g
		where (m.id = #{id} and m.pw = #{pw}) and (g.gradeNo = m.gradeNo)
	</select>
	
	
	
	<!-- 7. 아이디 중복 체크 -->
	<select id="idCheck" resultType="java.lang.String">
		select id from member
		where id = #{id}
	</select>
	
	<!-- 8. 상태 변경 -->
	<update id="changeStatus">
		update member
		set status = #{status}
		where id = #{id}
	</update>
	
	<!-- 9. 등급 변경 -->
	<update id="changeGradeNo">
		update member
		set gradeNo = #{gradeNo}
		where id = #{id}
	</update>
	
</mapper>